/*
 * Copyright (c) 2020   , WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.spotbugs'
}

dependencies {
    checkstyle project(':checkstyle')
    checkstyle "com.puppycrawl.tools:checkstyle:${puppycrawlCheckstyleVersion}"
    
    implementation project(':azure_functions-compiler-plugin')

    testImplementation "org.ballerinalang:ballerina-lang:${ballerinaLangVersion}"
    testImplementation "org.ballerinalang:ballerina-core:${ballerinaLangVersion}"
    testImplementation "org.ballerinalang:ballerina-parser:${ballerinaLangVersion}"
    testImplementation "org.ballerinalang:ballerina-tools-api:${ballerinaLangVersion}"
    testImplementation "org.testng:testng:${testngVersion}"
    testImplementation "commons-io:commons-io:${commomsIOVersion}"
    testImplementation "commons-logging:commons-logging:${commonsLoggingVersion}"
    testImplementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    testImplementation  "com.google.code.gson:gson:${googleGsonVersion}"
}

description = 'Ballerinax - Azure Functions Extension Tests'

tasks.withType(Checkstyle) {
    exclude '**/module-info.java'
}

checkstyle {
    toolVersion "${project.puppycrawlCheckstyleVersion}"
    configFile rootProject.file("build-config/checkstyle/build/checkstyle.xml")
    configProperties = ["suppressionFile" : file("${rootDir}/build-config/checkstyle/build/suppressions.xml")]
}

checkstyleTest.dependsOn(":checkstyle:downloadCheckstyleRuleFiles")

spotbugsTest {
    effort "max"
    reportLevel "low"
    reportsDir = file("$project.buildDir/reports/spotbugs")
    reports {
        html.enabled true
        text.enabled = true
    }
    def excludeFile = file('spotbugs-exclude.xml')
    if(excludeFile.exists()) {
        excludeFilter = excludeFile
    }
}

spotbugsMain {
    enabled false
}

checkstyleMain {
    enabled false
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

test {
    systemProperty "ballerina.offline.flag", "true"
    useTestNG() {
        suites 'src/test/resources/testng.xml'
        systemProperties = [
                "ballerina.home": System.getProperty('sampleDir', project.projectDir.absolutePath +
                        "/../target/ballerina-runtime"),
                sampleDir: System.getProperty('sampleDir', project.projectDir.absolutePath + "/../samples"),
        ]
    }
}

test.dependsOn ":azure_functions-ballerina:build"


// Disable publishing artifacts
tasks.withType(PublishToMavenRepository) {
    enabled = false
}
tasks.withType(PublishToMavenLocal) {
    enabled = false
}
